#Guide: Securing your applications with OAuth 2.0#
##This guide is for users creating ingress to a webpage or app with ngrok.##

**Introduction**
ngrok creates secure ingress to any app, device or service so you don’t have to spend hours learning arcane networking technologies. You can get started with a single command or a single line of code.

**What is ngrok?** Ngrok is an ingress-as-a-service platform that removes the hassle of getting code online from developers’ plates by decoupling ingress from infrastructure with one line of code , all without provisioning proxies or VPNs. 

When you have endpoints exposed with ngrok, it’s important to keep them safe and secure. One option you have for protection is OAuth, which requires visitors to your app or webpage to sign in to view it. In this guide, we'll walk you through the process of securing the endpoints you expose with ngrok via OAuth 2.0. 

*Note: OAuth is included on the ngrok free plan up to 5 MAUs.*

###Adding Authentication to Your Tunnels###

To secure a tunnel with OAuth 2.0, add the --oauth= flag to your tunnel command. 

Example:

`ngrok http 80 --oauth=github`

By adding the OAuth variable in the example above, only logged-in GitHub users can access your tunnel. 

ngrok supports OAuth tunnels with major providers such as Google, GitHub, and Microsoft, as well as any solution compatible with OAuth, OpenID Connect, and SAML, including Okta, Auth0, and many other Identity Providers. [Learn more about creating custom OAuth applications here.](https://ngrok.com/docs/cloud-edge/modules/oauth/google/#creating-a-custom-google-oauth-application) 

###Granular Authorization Requests###

After you add OAuth to your tunnel, you may want to restrict access to specific domains or individual users. This granularity is supported with the `--oauth-allow` command. 

For example, If you want to restrict by domain and only allow acme.com or doe.com the command would look like this:

`ngrok http 8080 --oauth=google 
--oauth-allow-domain=acme.com,doe.com`

If you want more granularity to restrict access only to john@acme.com and jane@doe.com you’d enter these values:

`ngrok http 8080 --oauth=google \
--oauth-allow-email=john@acme.com,jane@doe.com`

###Additional Security Controls###

Besides OAuth 2.0, ngrok offers other ingress access controls such as webhook verification, basic authentication, IP restrictions, and mutual TLS. Depending on what you’re building, your combination of these controls may differ.

